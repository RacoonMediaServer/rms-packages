// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: rms-notes.proto

package rms_notes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserLoginResponse_ErrorCode int32

const (
	UserLoginResponse_OK                 UserLoginResponse_ErrorCode = 0
	UserLoginResponse_ConnectionError    UserLoginResponse_ErrorCode = 1
	UserLoginResponse_InvalidCredentials UserLoginResponse_ErrorCode = 2
)

// Enum value maps for UserLoginResponse_ErrorCode.
var (
	UserLoginResponse_ErrorCode_name = map[int32]string{
		0: "OK",
		1: "ConnectionError",
		2: "InvalidCredentials",
	}
	UserLoginResponse_ErrorCode_value = map[string]int32{
		"OK":                 0,
		"ConnectionError":    1,
		"InvalidCredentials": 2,
	}
)

func (x UserLoginResponse_ErrorCode) Enum() *UserLoginResponse_ErrorCode {
	p := new(UserLoginResponse_ErrorCode)
	*p = x
	return p
}

func (x UserLoginResponse_ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserLoginResponse_ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_rms_notes_proto_enumTypes[0].Descriptor()
}

func (UserLoginResponse_ErrorCode) Type() protoreflect.EnumType {
	return &file_rms_notes_proto_enumTypes[0]
}

func (x UserLoginResponse_ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserLoginResponse_ErrorCode.Descriptor instead.
func (UserLoginResponse_ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{3, 0}
}

type IsUserLoggedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Пользователь Telegram
	User int32 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *IsUserLoggedRequest) Reset() {
	*x = IsUserLoggedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserLoggedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserLoggedRequest) ProtoMessage() {}

func (x *IsUserLoggedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserLoggedRequest.ProtoReflect.Descriptor instead.
func (*IsUserLoggedRequest) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{0}
}

func (x *IsUserLoggedRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

type IsUserLoggedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *IsUserLoggedResponse) Reset() {
	*x = IsUserLoggedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserLoggedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserLoggedResponse) ProtoMessage() {}

func (x *IsUserLoggedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserLoggedResponse.ProtoReflect.Descriptor instead.
func (*IsUserLoggedResponse) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{1}
}

func (x *IsUserLoggedResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

type UserLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL для подключения к Nextcloud
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// ID пользователя
	Login string `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	// Пароль пользователя
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// ID телеграм пользователя
	User int32 `protobuf:"varint,4,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserLoginRequest) Reset() {
	*x = UserLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginRequest) ProtoMessage() {}

func (x *UserLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginRequest.ProtoReflect.Descriptor instead.
func (*UserLoginRequest) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{2}
}

func (x *UserLoginRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *UserLoginRequest) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *UserLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserLoginRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

type UserLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code UserLoginResponse_ErrorCode `protobuf:"varint,1,opt,name=code,proto3,enum=UserLoginResponse_ErrorCode" json:"code,omitempty"`
}

func (x *UserLoginResponse) Reset() {
	*x = UserLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginResponse) ProtoMessage() {}

func (x *UserLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginResponse.ProtoReflect.Descriptor instead.
func (*UserLoginResponse) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{3}
}

func (x *UserLoginResponse) GetCode() UserLoginResponse_ErrorCode {
	if x != nil {
		return x.Code
	}
	return UserLoginResponse_OK
}

type AddNoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Заголовок заметки
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// Текст заметки
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// ID пользователя Telegram
	User int32 `protobuf:"varint,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *AddNoteRequest) Reset() {
	*x = AddNoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNoteRequest) ProtoMessage() {}

func (x *AddNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNoteRequest.ProtoReflect.Descriptor instead.
func (*AddNoteRequest) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{4}
}

func (x *AddNoteRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddNoteRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AddNoteRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

type AddTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Текст задачи
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Дата задачи в формате yyyy-mm-dd
	DueDate *string `protobuf:"bytes,2,opt,name=dueDate,proto3,oneof" json:"dueDate,omitempty"`
	// ID пользователя Telegram
	User int32 `protobuf:"varint,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *AddTaskRequest) Reset() {
	*x = AddTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskRequest) ProtoMessage() {}

func (x *AddTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskRequest.ProtoReflect.Descriptor instead.
func (*AddTaskRequest) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{5}
}

func (x *AddTaskRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *AddTaskRequest) GetDueDate() string {
	if x != nil && x.DueDate != nil {
		return *x.DueDate
	}
	return ""
}

func (x *AddTaskRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

type SnoozeTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID задачи
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Дата задачи в формате yyyy-mm-dd
	DueDate *string `protobuf:"bytes,2,opt,name=dueDate,proto3,oneof" json:"dueDate,omitempty"`
	// ID пользователя Telegram
	User int32 `protobuf:"varint,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *SnoozeTaskRequest) Reset() {
	*x = SnoozeTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnoozeTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnoozeTaskRequest) ProtoMessage() {}

func (x *SnoozeTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnoozeTaskRequest.ProtoReflect.Descriptor instead.
func (*SnoozeTaskRequest) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{6}
}

func (x *SnoozeTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SnoozeTaskRequest) GetDueDate() string {
	if x != nil && x.DueDate != nil {
		return *x.DueDate
	}
	return ""
}

func (x *SnoozeTaskRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

type DoneTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID задачи
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID пользователя Telegram
	User int32 `protobuf:"varint,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *DoneTaskRequest) Reset() {
	*x = DoneTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoneTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoneTaskRequest) ProtoMessage() {}

func (x *DoneTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoneTaskRequest.ProtoReflect.Descriptor instead.
func (*DoneTaskRequest) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{7}
}

func (x *DoneTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DoneTaskRequest) GetUser() int32 {
	if x != nil {
		return x.User
	}
	return 0
}

type NotesSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Путь к директории Obsidian
	Directory string `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	// Директория, в которую добавлять новые заметки
	NotesDirectory string `protobuf:"bytes,2,opt,name=notesDirectory,proto3" json:"notesDirectory,omitempty"`
	// Файл, в который добавляются задачи
	TasksFile string `protobuf:"bytes,3,opt,name=tasksFile,proto3" json:"tasksFile,omitempty"`
	// Время, в которое происходит уведомление (час, от 0 до 24)
	NotificationTime uint32 `protobuf:"varint,4,opt,name=notificationTime,proto3" json:"notificationTime,omitempty"`
}

func (x *NotesSettings) Reset() {
	*x = NotesSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rms_notes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotesSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotesSettings) ProtoMessage() {}

func (x *NotesSettings) ProtoReflect() protoreflect.Message {
	mi := &file_rms_notes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotesSettings.ProtoReflect.Descriptor instead.
func (*NotesSettings) Descriptor() ([]byte, []int) {
	return file_rms_notes_proto_rawDescGZIP(), []int{8}
}

func (x *NotesSettings) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

func (x *NotesSettings) GetNotesDirectory() string {
	if x != nil {
		return x.NotesDirectory
	}
	return ""
}

func (x *NotesSettings) GetTasksFile() string {
	if x != nil {
		return x.TasksFile
	}
	return ""
}

func (x *NotesSettings) GetNotificationTime() uint32 {
	if x != nil {
		return x.NotificationTime
	}
	return 0
}

var File_rms_notes_proto protoreflect.FileDescriptor

var file_rms_notes_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x72, 0x6d, 0x73, 0x2d, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29,
	0x0a, 0x13, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x14, 0x49, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x74, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x87, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x10, 0x02, 0x22, 0x4e, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x1d, 0x0a, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x62,
	0x0a, 0x11, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x64, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x35, 0x0a, 0x0f, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x4e, 0x6f,
	0x74, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x32, 0xc1, 0x03, 0x0a, 0x08,
	0x52, 0x6d, 0x73, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x49, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x12, 0x14, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x11, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x32, 0x0a,
	0x07, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0f, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x38, 0x0a, 0x0a, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x12, 0x2e, 0x53, 0x6e, 0x6f, 0x6f, 0x7a, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x08, 0x44,
	0x6f, 0x6e, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x10, 0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x73,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x0e, 0x5a, 0x0c, 0x2e, 0x2e, 0x2f, 0x72, 0x6d, 0x73, 0x2d, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rms_notes_proto_rawDescOnce sync.Once
	file_rms_notes_proto_rawDescData = file_rms_notes_proto_rawDesc
)

func file_rms_notes_proto_rawDescGZIP() []byte {
	file_rms_notes_proto_rawDescOnce.Do(func() {
		file_rms_notes_proto_rawDescData = protoimpl.X.CompressGZIP(file_rms_notes_proto_rawDescData)
	})
	return file_rms_notes_proto_rawDescData
}

var file_rms_notes_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rms_notes_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_rms_notes_proto_goTypes = []interface{}{
	(UserLoginResponse_ErrorCode)(0), // 0: UserLoginResponse.ErrorCode
	(*IsUserLoggedRequest)(nil),      // 1: IsUserLoggedRequest
	(*IsUserLoggedResponse)(nil),     // 2: IsUserLoggedResponse
	(*UserLoginRequest)(nil),         // 3: UserLoginRequest
	(*UserLoginResponse)(nil),        // 4: UserLoginResponse
	(*AddNoteRequest)(nil),           // 5: AddNoteRequest
	(*AddTaskRequest)(nil),           // 6: AddTaskRequest
	(*SnoozeTaskRequest)(nil),        // 7: SnoozeTaskRequest
	(*DoneTaskRequest)(nil),          // 8: DoneTaskRequest
	(*NotesSettings)(nil),            // 9: NotesSettings
	(*emptypb.Empty)(nil),            // 10: google.protobuf.Empty
}
var file_rms_notes_proto_depIdxs = []int32{
	0,  // 0: UserLoginResponse.code:type_name -> UserLoginResponse.ErrorCode
	1,  // 1: RmsNotes.IsUserLogged:input_type -> IsUserLoggedRequest
	3,  // 2: RmsNotes.UserLogin:input_type -> UserLoginRequest
	5,  // 3: RmsNotes.AddNote:input_type -> AddNoteRequest
	6,  // 4: RmsNotes.AddTask:input_type -> AddTaskRequest
	7,  // 5: RmsNotes.SnoozeTask:input_type -> SnoozeTaskRequest
	8,  // 6: RmsNotes.DoneTask:input_type -> DoneTaskRequest
	10, // 7: RmsNotes.GetSettings:input_type -> google.protobuf.Empty
	9,  // 8: RmsNotes.SetSettings:input_type -> NotesSettings
	2,  // 9: RmsNotes.IsUserLogged:output_type -> IsUserLoggedResponse
	4,  // 10: RmsNotes.UserLogin:output_type -> UserLoginResponse
	10, // 11: RmsNotes.AddNote:output_type -> google.protobuf.Empty
	10, // 12: RmsNotes.AddTask:output_type -> google.protobuf.Empty
	10, // 13: RmsNotes.SnoozeTask:output_type -> google.protobuf.Empty
	10, // 14: RmsNotes.DoneTask:output_type -> google.protobuf.Empty
	9,  // 15: RmsNotes.GetSettings:output_type -> NotesSettings
	10, // 16: RmsNotes.SetSettings:output_type -> google.protobuf.Empty
	9,  // [9:17] is the sub-list for method output_type
	1,  // [1:9] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_rms_notes_proto_init() }
func file_rms_notes_proto_init() {
	if File_rms_notes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rms_notes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserLoggedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserLoggedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnoozeTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoneTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rms_notes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotesSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rms_notes_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_rms_notes_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rms_notes_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rms_notes_proto_goTypes,
		DependencyIndexes: file_rms_notes_proto_depIdxs,
		EnumInfos:         file_rms_notes_proto_enumTypes,
		MessageInfos:      file_rms_notes_proto_msgTypes,
	}.Build()
	File_rms_notes_proto = out.File
	file_rms_notes_proto_rawDesc = nil
	file_rms_notes_proto_goTypes = nil
	file_rms_notes_proto_depIdxs = nil
}
