syntax = "proto3";

import "google/protobuf/empty.proto";
import "media.proto";

option go_package = "../rms-transcoder";

service Profiles {
  // Добавить профиль с параметрами транскодирования
  rpc AddProfile(Profile) returns (google.protobuf.Empty);

  // Получить все профили
  rpc GetProfiles(google.protobuf.Empty) returns (GetProfilesResponse);

  // Обновить профиль
  rpc UpdateProfile(Profile) returns (google.protobuf.Empty);

  // Удалить профиль
  rpc RemoveProfile(RemoveProfileRequest) returns (google.protobuf.Empty);
}

service Transcoder {
  // Добавить задачу транскодирования
  rpc AddJob(AddJobRequest) returns (AddJobResponse);

  // Получить статус задачи
  rpc GetJob(GetJobRequest) returns (GetJobResponse);

  // Отменить задачу (должно вызываться для каждой запущенной задачи)
  rpc CancelJob(CancelJobRequest) returns (google.protobuf.Empty);
}

message Profile {
  // Идентификатор профиля
  string id = 1;

  // Настройки транскодирования
  media.TranscodingSettings settings = 2;

  // Флаг, что профиль зарезервирован в системе и его нельзя удалить
  bool isReserved = 3;

  // Флаг, что профиль доступен только для чтения
  bool isReadOnly = 4;
}

message GetProfilesResponse {
  repeated Profile profiles = 1;
}

message RemoveProfileRequest {
  // Идентификатор профиля
  string id = 1;
}

message AddJobRequest {
  // Профиль с настройками транскодирования
  string profile = 1;

  // Путь к тому, что транскодировать
  string source = 2;

  // Куда положить результат
  string destination = 3;

  // Автоматически удалить задачу по завершении и отправить событие
  bool autoComplete = 4;

  // Транскодировать только определенное количество секунд
  optional uint32 duration = 5;

  // Пропустить в источнике некоторое количество секунд
  optional uint32 offset = 6;
}

message AddJobResponse {
  // ID созданной задачи
  string jobId = 1;
}

message GetJobRequest {
  string jobId = 1;
}

message GetJobResponse {
  enum Status {
    Pending = 0;
    Processing = 1;
    Failed = 3;
    Done = 4;
  }

  // Состояние задачи
  Status status = 1;

  // Путь к выходному файлу
  string destination = 2;

  // Сколько выполнено работы (в процентах)
  float progress = 3;
}

message CancelJobRequest {
  string jobId = 1;

  // Удалять ли файлы после завершения
  bool removeFiles = 2;
}